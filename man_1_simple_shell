.TH SIMPLE SHELL 09/01/2025 "simple shell manual"
.TP
NAME
simple_shell - a simple Unix shell program
.TP
.SH SYNOPSIS
simple_shell
.TP
.SH DESCRIPTION
simple_shell is a simple command-line shell program that simulates basic shell functionality.
It allows the user to execute commands, with support for command arguments and the "exit" command.
.TP
.SH COMMANDS
exit
Exit the shell program.
.TP
.B <command>
Execute the specified command, if found in the system's PATH environment variable.
.TP
.SH EXIT STATUS
The exit status of the program is 0 on successful execution. If an error occurs (e.g., command not found),
the program will print an error message to stderr but continue to run.
.TP
.SH IMPLEMENTATION
The simple_shell program operates in a loop, prompting the user for input with a "$ " prompt when the input is from
a terminal. The input is read using the getline function and tokenized using the tokenize_input function. Commands
are executed by creating a child process using fork(2), and the child process executes the command with execve(2).
If the "exit" command is entered, the program exits with status 0.
.TP
The following functions are implemented:
.TP
.BI interactive mode / non interactive mode
Entry point for the shell program. Processes the user's input and executes commands.
.TP
.BI execute_command(command)
Executes the given command by forking a child process and using execve(2). If the command is not found, an error
message is printed.
.TP
.BI free_args(args)
Frees the memory allocated for the argument array.
.TP
.BI custom_getenv(name)
Retrieves the value of an environment variable. Returns NULL if the variable is not found.
.TP
.BI get_command_path(command)
Finds the full path of a command in the system's PATH environment variable. Returns NULL if the command is not found.
.TP
.BI tokenize_input(input)
Splits the input string into tokens (words). Returns an array of strings (tokens).
.TP
.SH EXAMPLES
$ simple_shell
$ ls -l
$ /bin/echo Hello, World!
$ exit
.TP
.SH ENVIRONMENT VARIABLES
The program relies on the following environment variables:
.TP
.SH PATH
A colon-separated list of directories to search for commands when they are executed.
.TP
.SH FILES
The program does not require any external configuration files, other than the system's environment variables.
.TP
.SH SEE ALSO
execve(2), fork(2), wait(2), getenv(3), strtok(3)
.TP
.SH AUTHOR
.TP
.B [Gwendal Martin] https://github.com/Hericksen
.TP
.B [Jean-Alain Reni√©] https://github.com/JaRenie-spec
